# -*- coding: utf-8 -*-
import os
import sys
import argparse
import logging
import pandas as pd
from src.config import (
    BASE_DIR, CSV_FILE, DOWNLOAD_LOG_FILE, LOG_LEVEL, DOWNLOADS_DIR,
    PLAYLIST_JSON_FILE, PLAYLIST_M3U_FILE, PLAYLIST_JSON_SORT_ORDER
    # –£–î–ê–õ–ò–õ–ò CLEANUP_THUMBNAILS_AFTER_DOWNLOAD –û–¢–°–Æ–î–ê, –¢–ê–ö –ö–ê–ö –û–ù –ù–ï –ù–£–ñ–ï–ù –ù–ê–ü–†–Ø–ú–£–Æ –ó–î–ï–°–¨
)
# --- –ò–ó–ú–ï–ù–ï–ù–û: –ò–ú–ü–û–†–¢–ò–†–£–ï–ú cleanup_temp_files ---
from src.downloader import download_tracks, cleanup_temp_files
from src.playlist import create_playlist_json, create_m3u_playlist

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
# ... (–∫–æ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è) ...
logger = logging.getLogger(__name__)
# -----------------------------

# --->>> –£–î–ê–õ–ò–¢–¨ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –§–£–ù–ö–¶–ò–ò cleanup_temp_files –û–¢–°–Æ–î–ê <<<---
# def cleanup_temp_files():
#     """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–±–ª–æ–∂–µ–∫, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ."""
#     # ... (–í–ï–°–¨ –ö–û–î –≠–¢–û–ô –§–£–ù–ö–¶–ò–ò –£–î–ê–õ–ò–¢–¨) ...
# --->>> –ö–û–ù–ï–¶ –£–î–ê–õ–ï–ù–ò–Ø <<<---


def check_file_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è."""
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
    return all_ok

def main(skip_download_flag):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤."""
    logger.info("="*10 + "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤" + "="*10)

    if not check_file_structure() and not skip_download_flag:
         logger.critical("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
         sys.exit(1)

    links_to_download = []
    if not skip_download_flag:
        try:
            logger.info(f"–ß—Ç–µ–Ω–∏–µ CSV —Ñ–∞–π–ª–∞: {CSV_FILE}")
            df = pd.read_csv(CSV_FILE)
            links_to_download = df['Link'].dropna().unique().tolist()
            logger.info(f"üéß –ù–∞–π–¥–µ–Ω–æ {len(links_to_download)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.")
            if not links_to_download:
                logger.warning("‚ö†Ô∏è CSV —Ñ–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–æ–∫. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞—á–Ω–µ—Ç—Å—è.")
        except FileNotFoundError:
            logger.error(f"‚ùå –§–∞–π–ª {CSV_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ—á–µ–≥–æ —Å–∫–∞—á–∏–≤–∞—Ç—å.")
            sys.exit(1)
        except Exception as e:
            logger.critical(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å CSV —Ñ–∞–π–ª {CSV_FILE}: {e}", exc_info=True)
            sys.exit(1)
    else:
        logger.info("‚è© –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ (—Ñ–ª–∞–≥ --skip-download).")

    # --- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–æ–≤ ---
    if not skip_download_flag and links_to_download:
        download_tracks(links_to_download)
        # --- –í–´–ó–û–í –§–£–ù–ö–¶–ò–ò –û–ß–ò–°–¢–ö–ò –û–°–¢–ê–ï–¢–°–Ø ---
        # –§—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏–∑ src.downloader
        cleanup_temp_files()
        # --- –ö–û–ù–ï–¶ –í–´–ó–û–í–ê ---
    elif not links_to_download and not skip_download_flag:
         logger.info("–°—Å—ã–ª–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –Ω–µ—Ç.")

    # --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ (–≤—Å–µ–≥–¥–∞) ---
    # ... (–∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

    logger.info("üèÅ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω.")
    logger.info(f"–õ–æ–≥ —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {DOWNLOAD_LOG_FILE}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–°–∫–∞—á–∏–≤–∞–µ—Ç —Ç—Ä–µ–∫–∏ SoundCloud –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç—ã.")
    parser.add_argument(
        '--skip-download',
        action='store_true',
        help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–∑—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç—ã.'
    )
    args = parser.parse_args()
    main(skip_download_flag=args.skip_download)