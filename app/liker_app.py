# -*- coding: utf-8 -*-
import streamlit as st
import pandas as pd
import os
import sys
import logging

# --- –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ 'src' –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π ---
# –≠—Ç–æ –Ω—É–∂–Ω–æ, —Ç.–∫. —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –ø–∞–ø–∫–∏ 'app', –∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–¥–æ –∏–∑ 'src'
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(current_dir) # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ (–≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞)
src_path = os.path.join(project_root, 'src')
if src_path not in sys.path:
    sys.path.insert(0, src_path)
# ---------------------------------------------------

# --- –ò–º–ø–æ—Ä—Ç—ã –∏–∑ src ---
try:
    from src.config import CSV_FILE, DATA_DIR
    from src.scraper import setup_driver, scroll_and_collect
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç –ª–æ–≥–≥–µ—Ä–∞ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–¥–µ—Å—å
except ImportError as e:
     st.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –∏–∑ 'src': {e}")
     st.error(f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –≤–µ—Ä–Ω–∞ –∏ —Ñ–∞–π–ª '{os.path.join(src_path, '__init__.py')}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
     st.stop()
# ----------------------

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ–≥–≥–µ—Ä Streamlit)
# logger = logging.getLogger(__name__) # –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –ª–æ–≥–≥–µ—Ä

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ===
DEFAULT_SCROLL_WAIT_TIME = 2.0 # –°–µ–∫—É–Ω–¥—ã
DEFAULT_MAX_CONSECUTIVE_SAME_HEIGHT = 3 # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã—Å–æ—Ç—ã

# === –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ===
st.set_page_config(page_title="SoundCloud Like Collector", layout="wide")
st.title("üéµ SoundCloud Like Collector")
st.caption(f"–°–æ–±–∏—Ä–∞–µ—Ç –ª–∞–π–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ `{os.path.relpath(CSV_FILE, project_root)}`") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å

# –ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
col1, col2 = st.columns([2, 1])

with col1:
    username = st.text_input(
        "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SoundCloud:", "",
        help="–¢–æ, —á—Ç–æ –∏–¥–µ—Ç –ø–æ—Å–ª–µ soundcloud.com/"
    )
    start_button = st.button("üöÄ –°–æ–±—Ä–∞—Ç—å –ª–∞–π–∫–∏")

with col2:
    st.subheader("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞")
    scroll_wait = st.number_input(
        "–ü–∞—É–∑–∞ –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞ (—Å–µ–∫—É–Ω–¥—ã):",
        min_value=0.5, max_value=10.0, value=DEFAULT_SCROLL_WAIT_TIME, step=0.1,
        help="–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö —Ç—Ä–µ–∫–æ–≤. –£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–∏ –º–µ–¥–ª–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ."
        )
    max_wait_count = st.number_input(
        "–ö–æ–ª-–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:",
        min_value=1, max_value=10, value=DEFAULT_MAX_CONSECUTIVE_SAME_HEIGHT, step=1,
        help="–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—ã—Å–æ—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞—Å—Ç—å, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–æ–ª–ª–∏–Ω–≥."
        )

st.markdown("---")

# –ò–Ω—Ñ–æ –æ CSV
existing_tracks = 0
csv_exists = os.path.exists(CSV_FILE)
if csv_exists:
    try:
        df_existing = pd.read_csv(CSV_FILE)
        existing_tracks = len(df_existing)
        st.info(f"‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω `{os.path.relpath(CSV_FILE, project_root)}` ({existing_tracks} —Ç—Ä–µ–∫–æ–≤). –ë—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω.")
    except Exception as e:
        st.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å `{CSV_FILE}`: {e}")

# --- –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è Streamlit ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º session_state –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
if 'status_message' not in st.session_state: st.session_state.status_message = ""
if 'progress_value' not in st.session_state: st.session_state.progress_value = 0
if 'progress_text' not in st.session_state: st.session_state.progress_text = ""
if 'caption_message' not in st.session_state: st.session_state.caption_message = ""

status_placeholder = st.empty()
progress_bar_placeholder = st.empty()
progress_text_placeholder = st.empty()
caption_placeholder = st.empty()

def update_streamlit_ui(type, message):
     if type == "status":
          st.session_state.status_message = message
     elif type == "progress":
          # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å - message —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤
          st.session_state.progress_value = min(message / 1000, 1.0) # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —à–∫–∞–ª–∞ –¥–æ 1000
          st.session_state.progress_text = f"–°–æ–±—Ä–∞–Ω–æ {message} —Ç—Ä–µ–∫–æ–≤..."
     elif type == "caption":
          st.session_state.caption_message = message
     elif type == "info": # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
          status_placeholder.info(message)
     elif type == "warning":
          status_placeholder.warning(message)
     elif type == "error":
          status_placeholder.error(message)
     elif type == "success": # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
         status_placeholder.success(message)

     # –û–±–Ω–æ–≤–ª—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –∏–∑ session_state
     if st.session_state.status_message: status_placeholder.info(st.session_state.status_message)
     if st.session_state.progress_text:
          progress_bar_placeholder.progress(st.session_state.progress_value)
          progress_text_placeholder.text(st.session_state.progress_text)
     if st.session_state.caption_message: caption_placeholder.caption(st.session_state.caption_message)


# –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞
if start_button:
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã
    st.session_state.status_message = ""
    st.session_state.progress_value = 0
    st.session_state.progress_text = ""
    st.session_state.caption_message = ""
    status_placeholder.empty()
    progress_bar_placeholder.empty()
    progress_text_placeholder.empty()
    caption_placeholder.empty()


    if not username.strip():
        st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SoundCloud.")
    else:
        profile_url = f"https://soundcloud.com/{username.strip()}/likes"
        st.markdown(f"üîó –°–æ–±–∏—Ä–∞–µ–º –ª–∞–π–∫–∏: [{profile_url}]({profile_url})")
        st.markdown(f"(–ü–∞—É–∑–∞: {scroll_wait} —Å–µ–∫, –ü—Ä–æ–≤–µ—Ä–æ–∫ –∫–æ–Ω—Ü–∞: {max_wait_count})")

        driver = None
        try:
            with st.spinner("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome..."):
                driver = setup_driver() # setup_driver —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç st.stop() –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ

            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä —Å –ø–µ—Ä–µ–¥–∞—á–µ–π callback —Ñ—É–Ω–∫—Ü–∏–∏
            collected_list = scroll_and_collect(
                driver, profile_url, scroll_wait, max_wait_count, update_streamlit_ui
            )

            # –û—á–∏—â–∞–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è scroll_and_collect
            status_placeholder.empty()
            progress_bar_placeholder.empty()
            progress_text_placeholder.empty()
            caption_placeholder.empty()

            if collected_list is not None:
                st.success(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –°–æ–±—Ä–∞–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤: {len(collected_list)}")
                if collected_list:
                    df_new = pd.DataFrame(collected_list, columns=["Title", "Link"])
                    st.dataframe(df_new, height=300)
                    try:
                         # –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –ø–∞–ø–∫–∞ data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                         os.makedirs(DATA_DIR, exist_ok=True)
                         df_new.to_csv(CSV_FILE, index=False, encoding='utf-8')
                         st.info(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ `{os.path.relpath(CSV_FILE, project_root)}`.")
                         csv_data = df_new.to_csv(index=False).encode('utf-8')
                         st.download_button(
                            label="‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å CSV", data=csv_data,
                            file_name=f"{username.strip()}_liked_tracks.csv", mime="text/csv"
                         )
                         st.markdown(f"‚û°Ô∏è –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å `python run_downloader.py` –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
                    except Exception as e: st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å CSV: {e}")
                else: st.warning("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ª–∞–π–∫–∞.")
            else:
                 # –ï—Å–ª–∏ scroll_and_collect –≤–µ—Ä–Ω—É–ª None (–æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
                 st.error("–°–±–æ—Ä –ª–∞–π–∫–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")

        except Exception as e: # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ –æ—Ç setup_driver –∏–ª–∏ –¥—Ä—É–≥–∏–µ
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        finally:
            if driver:
                driver.quit()
                st.info("–î—Ä–∞–π–≤–µ—Ä Chrome –∑–∞–∫—Ä—ã—Ç.")